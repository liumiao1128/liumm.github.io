{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/3-hexo/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/mobile.styl","path":"css/mobile.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/gitalk.js","path":"js/gitalk.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/iconfont.js","path":"js/iconfont.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","path":"js/jquery.pjax.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/gitment.js","path":"js/gitment.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/js/titleTip.js","path":"js/titleTip.js","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","path":"img/article-list-background.jpeg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/brown-papersq.png","path":"img/brown-papersq.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/gov.png","path":"img/gov.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/school-book.png","path":"img/school-book.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/WechatIMG31.jpeg","path":"img/WechatIMG31.jpeg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","path":"css/fonts/icomoon.eot","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","path":"css/fonts/icomoon.ttf","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","path":"css/fonts/icomoon.svg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","path":"css/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","path":"css/fonts/icomoon.woff","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","path":"css/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff2","path":"css/fonts/iconfont.woff2","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","path":"css/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","path":"css/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/fonts/selection.json","path":"css/fonts/selection.json","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","path":"css/hl_theme/atom-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","path":"css/hl_theme/brown-paper.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","path":"css/hl_theme/darcula.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","path":"css/hl_theme/github-gist.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","path":"css/hl_theme/atom-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","path":"css/hl_theme/github.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","path":"css/hl_theme/gruvbox-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","path":"css/hl_theme/gruvbox-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","path":"css/hl_theme/kimbie-dark.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","path":"css/hl_theme/railscasts.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","path":"css/hl_theme/kimbie-light.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","path":"css/hl_theme/sublime.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","path":"css/hl_theme/school-book.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","path":"css/hl_theme/sunburst.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","path":"css/hl_theme/zenbum.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","path":"css/hl_theme/rainbow.styl","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/alipay.png","path":"img/alipay.png","modified":0,"renderable":1},{"_id":"themes/3-hexo/source/img/weixin.png","path":"img/weixin.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"6795429c6e9f3a7e73a8723840415eafd5d4e89e","modified":1679734421120},{"_id":"source/CNAME","hash":"cf7261c9481115f830fd8e78c5bb50bfdb9ac6c9","modified":1679734833758},{"_id":"source/_posts/《开发环境准备》.md","hash":"d458351dce391b8e2f39646c36e02776f8a2b17d","modified":1679747054533},{"_id":"themes/3-hexo/.gitignore","hash":"86a50fa08e69cab561892aa5edef24f9081bbde1","modified":1679725396864},{"_id":"themes/3-hexo/.DS_Store","hash":"a9e24b3ed426e3870873ffe0ca7e089cea5b200f","modified":1679731423328},{"_id":"themes/3-hexo/LICENSE","hash":"b04140c5f682db2b300428f97bb164fd7f5f18bd","modified":1679725396864},{"_id":"themes/3-hexo/languages/en.yml","hash":"53ae29ae1237fc7822df85a6d2f8da6f0078625e","modified":1679726216877},{"_id":"themes/3-hexo/_config.yml","hash":"1db33b93bf42e39e2f077e5536148fe82a93d5b6","modified":1679746886581},{"_id":"themes/3-hexo/README.md","hash":"d2c42534ceabcb7cd2e58ed994bf7d6f734d1f3b","modified":1679725396864},{"_id":"themes/3-hexo/layout/indexs.md","hash":"fd79299955fdf6af1d07d23cf26d9ae8ebe16729","modified":1679726990727},{"_id":"themes/3-hexo/layout/index.ejs","hash":"27ea3dac053d501b79bbef5117b4f3aff063d8cd","modified":1679726546923},{"_id":"themes/3-hexo/layout/post.ejs","hash":"4abd16c0f5e3f51103d23b73710d695dc7fdc5d2","modified":1679725396867},{"_id":"themes/3-hexo/languages/zh-CN.yml","hash":"d2c6d86fe2ff03e6ee9bbc16dff8efe5b47ac297","modified":1679727440651},{"_id":"themes/3-hexo/source/.DS_Store","hash":"fdcc907c46e093a14b153c5dc8c038461997ed3c","modified":1679725396867},{"_id":"themes/3-hexo/layout/_partial/article_copyright.ejs","hash":"0ebb17d001cb7bb7606c616c380049a2e7124496","modified":1679725396865},{"_id":"themes/3-hexo/layout/_partial/article.ejs","hash":"516844c4a0e13d6773f6029849f51c59613b6f69","modified":1679725396865},{"_id":"themes/3-hexo/layout/_partial/full-toc.ejs","hash":"a734c26d86da6697003ed27672c1b9b82b216c82","modified":1679725396866},{"_id":"themes/3-hexo/layout/_partial/dashang.ejs","hash":"8734114e45ab9f1b19961d621ac14562db06d952","modified":1679742841772},{"_id":"themes/3-hexo/layout/_partial/copyright.ejs","hash":"f66939a8c9d5258948b47842b8b4495e6ec45988","modified":1679727337387},{"_id":"themes/3-hexo/layout/_partial/friends.ejs","hash":"d11092791e5c140ff81f2aefa0d1b051f403239d","modified":1679725396866},{"_id":"themes/3-hexo/layout/_partial/meta.ejs","hash":"8a9e93f9cbe80763264018290da0b14b4bbe8ac5","modified":1679725396866},{"_id":"themes/3-hexo/layout/_partial/mathjax.ejs","hash":"c2e5cef2377884cd79e5f686fe4f74b082744306","modified":1679725396866},{"_id":"themes/3-hexo/layout/_partial/header.ejs","hash":"d0b84370ca81c3baa02a05613ff040003acd2985","modified":1679725396866},{"_id":"themes/3-hexo/layout/_partial/nav-left.ejs","hash":"0e7de3e614ca49fe1c7420f233bea22e02641272","modified":1679725396866},{"_id":"themes/3-hexo/layout/_partial/tag.ejs","hash":"3cf8ba0c6112dfa8089603b8df3e31f70a272715","modified":1679725396866},{"_id":"themes/3-hexo/layout/_partial/toc-ref.ejs","hash":"6406251dabda66ef686d4c15edbc3061b6d828b8","modified":1679725396866},{"_id":"themes/3-hexo/layout/_partial/nav-right.ejs","hash":"e205f9bb61fd4403d24d863693d4a34ea31b8539","modified":1679725396866},{"_id":"themes/3-hexo/layout/_partial/footer.ejs","hash":"ed479aa9affee3b02a76da06de45a7c40a97a706","modified":1679727457618},{"_id":"themes/3-hexo/source/css/style.styl","hash":"7090b81f34e26172670c68da6a366ca186523779","modified":1679725396871},{"_id":"themes/3-hexo/layout/_partial/comment.ejs","hash":"5507b4dfab2032345e012a0c5356f63b01395157","modified":1679725396865},{"_id":"themes/3-hexo/source/css/mobile.styl","hash":"59a4abd36cc8ff2107f1fcb3c0fe48d0492c9030","modified":1679725396870},{"_id":"themes/3-hexo/source/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1679725396869},{"_id":"themes/3-hexo/source/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1679725396875},{"_id":"themes/3-hexo/source/js/script.js","hash":"f261fb46d822e9b89296c454a965ff34e4b244f9","modified":1679725396875},{"_id":"themes/3-hexo/source/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1679725396875},{"_id":"themes/3-hexo/source/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1679725396871},{"_id":"themes/3-hexo/source/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1679725396875},{"_id":"themes/3-hexo/source/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1679725396871},{"_id":"themes/3-hexo/source/js/titleTip.js","hash":"81dca549063e29ba3a4a278f0f4388eba8a2167b","modified":1679725396876},{"_id":"themes/3-hexo/source/img/avatar.jpg","hash":"a42360089bfa892d803cf5747eab359d90f337f1","modified":1679725396871},{"_id":"themes/3-hexo/source/img/gov.png","hash":"f31c9f47faedf7f33b9580d6284ab891fb697560","modified":1679725396872},{"_id":"themes/3-hexo/source/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1679725396872},{"_id":"themes/3-hexo/source/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1679725396872},{"_id":"themes/3-hexo/layout/_partial/comments/disqus.ejs","hash":"cd0022ce7e6d6efb07a00e87477cdf791f7f6703","modified":1679725396865},{"_id":"themes/3-hexo/layout/_partial/comments/gitment.ejs","hash":"f16442568b43d034faaa8e3507f5ae8da34c7b72","modified":1679725396865},{"_id":"themes/3-hexo/layout/_partial/comments/gitalk.ejs","hash":"fbd3c7d72c8354d700918390c6cbfc0a11408277","modified":1679725396865},{"_id":"themes/3-hexo/layout/_partial/comments/utteranc.ejs","hash":"c76773b96860940083baf16470b7b80ac098e645","modified":1679725396865},{"_id":"themes/3-hexo/layout/_partial/comments/livere.ejs","hash":"e820aa16b5ed4e024616b5e2d424925820d43e56","modified":1679725396865},{"_id":"themes/3-hexo/source/css/_partial/comment.styl","hash":"2a9b5ffb759be85545a89f6d1194579a800f51a5","modified":1679725396867},{"_id":"themes/3-hexo/layout/_partial/comments/click2show.ejs","hash":"fa6675230f8c313236604e26926b142f4f418bdd","modified":1679725396865},{"_id":"themes/3-hexo/source/css/_partial/dashang.styl","hash":"f6447a2ac407228e1d53e3455db2919ac0e9f094","modified":1679725396867},{"_id":"themes/3-hexo/source/css/_partial/fade.styl","hash":"4f687cbc74caf8a0887f5e89250284a9bce8b5c1","modified":1679725396867},{"_id":"themes/3-hexo/source/css/_partial/nav-left.styl","hash":"0f80414f4c663c5250c8ff41d01ce6c68450ee33","modified":1679725396867},{"_id":"themes/3-hexo/source/css/_partial/nav-right.styl","hash":"44bdb1fe3e75996f24f2656770d6a376330e898d","modified":1679725396867},{"_id":"themes/3-hexo/source/css/_partial/full-toc.styl","hash":"0143711c1221cb4e70a3db866754d79c8a81d253","modified":1679725396867},{"_id":"themes/3-hexo/source/css/_partial/num-load.styl","hash":"4b996440bba8ec755aa70bc6d074d7dbba55ec0c","modified":1679725396868},{"_id":"themes/3-hexo/source/css/_partial/post.styl","hash":"0dd8d208081b92e05d6db3361743c520a2816828","modified":1679725396868},{"_id":"themes/3-hexo/source/css/_partial/nprogress.styl","hash":"65efbddd23a264e7d1e85f4073228526770e833c","modified":1679725396868},{"_id":"themes/3-hexo/source/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1679725396868},{"_id":"themes/3-hexo/source/css/_partial/font.styl","hash":"c68d6942ed62f9cce8a9042f5a59055a0ee5441c","modified":1679725396867},{"_id":"themes/3-hexo/source/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1679725396868},{"_id":"themes/3-hexo/source/css/fonts/iconfont.eot","hash":"b14b8624988ff069aff3145f88c0d7ac49052bd3","modified":1679725396868},{"_id":"themes/3-hexo/source/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1679725396868},{"_id":"themes/3-hexo/source/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1679725396868},{"_id":"themes/3-hexo/source/css/fonts/iconfont.ttf","hash":"140829ecf12d30c6e18d8dc6dc0c188a66addd25","modified":1679725396869},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff2","hash":"b0317a0b2ebb1181a8bf5a97d03556dd54538645","modified":1679725396869},{"_id":"themes/3-hexo/source/css/fonts/iconfont.woff","hash":"0d2d4559f1ac4fa801eb8cc099fa5bf9dcf955ef","modified":1679725396869},{"_id":"themes/3-hexo/source/css/fonts/selection.json","hash":"57c7f100019d57b512aab509185cb0a6eb9aa4c8","modified":1679725396869},{"_id":"themes/3-hexo/source/css/fonts/iconfont.svg","hash":"13974fe35fca836e870a960ecb11b7eca2e036f8","modified":1679725396869},{"_id":"themes/3-hexo/source/css/hl_theme/brown-paper.styl","hash":"03af387edcc1cf8c18d12e9c440fd51b6cf425b6","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/darcula.styl","hash":"2bfc14f27ccca108b4b3755782de8366e8bd001e","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/github-gist.styl","hash":"5e05b19832c1099bd9d284bc3ed00dc8a3d7ee23","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/atom-dark.styl","hash":"f3eb4e5feda9cbd6242ccf44ca064e2979b5d719","modified":1679725396869},{"_id":"themes/3-hexo/source/css/hl_theme/atom-light.styl","hash":"553987211d3323a7dfc0b08786b183a3435978c9","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/github.styl","hash":"53276ff1f224f691dfe811e82c0af7f4476abf5d","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-dark.styl","hash":"315ad610d303caba9eac80a7d51002193a15478a","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/gruvbox-light.styl","hash":"1bece084b1dbbbd4af064f05feffd8c332b96a48","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/railscasts.styl","hash":"a6e8cfd2202afd7893f5268f3437421e35066e7b","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-dark.styl","hash":"e9c190f9ffc37a13cac430512e4e0c760205be4a","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/sublime.styl","hash":"501d75ef0f4385bea24d9b9b4cc434ba68d4be27","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/kimbie-light.styl","hash":"0c3ccd0d64e7504c7061d246dc32737f502f64e4","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/school-book.styl","hash":"51659351b391a2be5c68728bb51b7ad467c5e0db","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/sunburst.styl","hash":"2aa9817e68fb2ed216781ea04b733039ebe18214","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/zenbum.styl","hash":"933a3b196d01254dea5e6f48105ea15e210ae000","modified":1679725396870},{"_id":"themes/3-hexo/source/css/hl_theme/rainbow.styl","hash":"e5c37646a9d9c1094f9aab7a7c65a4b242e8db00","modified":1679725396870},{"_id":"themes/3-hexo/source/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1679725396872},{"_id":"themes/3-hexo/source/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1679725396875},{"_id":"themes/3-hexo/source/img/WechatIMG31.jpeg","hash":"c0a679f386c277d2c7711eec01efb5eae65ca773","modified":1679727774230},{"_id":"themes/3-hexo/source/js/gitalk.js","hash":"26ba4841dcb4b178f730f53a8d1f4a7c89442b4f","modified":1679725396874},{"_id":"public/search.xml","hash":"b15cb49a06ca8f8f104d6cba5b0f4e4076fd3f96","modified":1679741813189},{"_id":"public/archives/index.html","hash":"e774faefefcacc64de0e23684f3cced5bfc0caf8","modified":1679741813189},{"_id":"public/archives/2023/index.html","hash":"e774faefefcacc64de0e23684f3cced5bfc0caf8","modified":1679741813189},{"_id":"public/archives/2023/03/index.html","hash":"e774faefefcacc64de0e23684f3cced5bfc0caf8","modified":1679741813189},{"_id":"public/2023/03/25/《开发环境准备》/index.html","hash":"10496f8c0587b0a15db929826f6c5a22412e8bcf","modified":1679741813189},{"_id":"public/index.html","hash":"e774faefefcacc64de0e23684f3cced5bfc0caf8","modified":1679741813189},{"_id":"public/categories/GoLang/go语言开发环境搭建-《开发环境准备》/index.html","hash":"e774faefefcacc64de0e23684f3cced5bfc0caf8","modified":1679741813189},{"_id":"public/categories/GoLang/index.html","hash":"e774faefefcacc64de0e23684f3cced5bfc0caf8","modified":1679741813189},{"_id":"public/img/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1679741813189},{"_id":"public/img/alipay.jpg","hash":"e457d1d3dfefbbd824d154cf756a2c6d10b812a2","modified":1679741813189},{"_id":"public/img/avatar.jpg","hash":"a42360089bfa892d803cf5747eab359d90f337f1","modified":1679741813189},{"_id":"public/CNAME","hash":"cf7261c9481115f830fd8e78c5bb50bfdb9ac6c9","modified":1679741813189},{"_id":"public/img/gov.png","hash":"f31c9f47faedf7f33b9580d6284ab891fb697560","modified":1679741813189},{"_id":"public/img/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1679741813189},{"_id":"public/img/article-list-background.jpeg","hash":"4fdf8b3e53dd02d6ee6360aebfadb0cba1fb5633","modified":1679741813189},{"_id":"public/css/fonts/icomoon.eot","hash":"b6195bedc1cb2f9cfcb26cc27021f2e94be2ab0a","modified":1679741813189},{"_id":"public/css/fonts/icomoon.svg","hash":"37ac1ef28b03f46bf3ad2606c86f0e1ec3e4405f","modified":1679741813189},{"_id":"public/css/fonts/icomoon.ttf","hash":"eb976d8b8559fcddfc2658a03a4350cb566fc06b","modified":1679741813189},{"_id":"public/css/fonts/iconfont.eot","hash":"b14b8624988ff069aff3145f88c0d7ac49052bd3","modified":1679741813189},{"_id":"public/css/fonts/icomoon.woff","hash":"3985d29416bb9b19f50a2f20f2bbbce47f10af8d","modified":1679741813189},{"_id":"public/css/fonts/iconfont.ttf","hash":"140829ecf12d30c6e18d8dc6dc0c188a66addd25","modified":1679741813189},{"_id":"public/css/fonts/iconfont.woff2","hash":"b0317a0b2ebb1181a8bf5a97d03556dd54538645","modified":1679741813189},{"_id":"public/css/fonts/iconfont.svg","hash":"13974fe35fca836e870a960ecb11b7eca2e036f8","modified":1679741813189},{"_id":"public/css/fonts/iconfont.woff","hash":"0d2d4559f1ac4fa801eb8cc099fa5bf9dcf955ef","modified":1679741813189},{"_id":"public/img/weixin.jpg","hash":"8dafb22561698d0758fba9ea2a45abf6ad3512a2","modified":1679741813189},{"_id":"public/css/mobile.css","hash":"5998f6fc27998596beb1e40e4bc3c43be2ed764c","modified":1679741813189},{"_id":"public/js/search.js","hash":"c80c9a231ee040c7adc07a477793873fb85ce8bc","modified":1679741813189},{"_id":"public/js/titleTip.js","hash":"81dca549063e29ba3a4a278f0f4388eba8a2167b","modified":1679741813189},{"_id":"public/css/hl_theme/atom-light.css","hash":"d31edb9816dae6b01410028bceb91757a962f780","modified":1679741813189},{"_id":"public/css/hl_theme/brown-paper.css","hash":"500c8e750373f6656ff49a7857c871ceedcf8777","modified":1679741813189},{"_id":"public/css/hl_theme/github-gist.css","hash":"7a41c1c479d09df875f99f1f6d94aac42e9e2ad0","modified":1679741813189},{"_id":"public/css/hl_theme/atom-dark.css","hash":"88d11052a24e8100af6248eb4dbe1ce7b0e96408","modified":1679741813189},{"_id":"public/css/hl_theme/gruvbox-dark.css","hash":"8c440d9b4ee19ac03eaee3c6af78ba52e5ba5535","modified":1679741813189},{"_id":"public/css/hl_theme/github.css","hash":"e05a0806a508a26b9f3f3794b6b588ec6504ad3f","modified":1679741813189},{"_id":"public/css/hl_theme/gruvbox-light.css","hash":"30514aaa242a34647aa666cfca4fc74c595ea8f2","modified":1679741813189},{"_id":"public/css/hl_theme/kimbie-dark.css","hash":"728527fcc308da454722c119b89e6da3025bd1e3","modified":1679741813189},{"_id":"public/css/hl_theme/sublime.css","hash":"f65c5b116d9213afb9c324384a2f3bc86cb71121","modified":1679741813189},{"_id":"public/css/hl_theme/railscasts.css","hash":"511f2fd2a84d426e5da5cb17880cc08f73beb002","modified":1679741813189},{"_id":"public/css/hl_theme/kimbie-light.css","hash":"0c61926c989163faefb031d27bce3e287d6e10f2","modified":1679741813189},{"_id":"public/css/hl_theme/sunburst.css","hash":"8a135abac1512cf430d1d1ad2304b79afa1a4d6e","modified":1679741813189},{"_id":"public/css/hl_theme/darcula.css","hash":"4341074bae4bc9f0b86e32b623e27babc0159b6e","modified":1679741813189},{"_id":"public/css/hl_theme/zenbum.css","hash":"0a78f74a93568e20b32ca7427c719e9bae9a0b55","modified":1679741813189},{"_id":"public/css/hl_theme/rainbow.css","hash":"7ff4251938076ddb7e4e49413db82653e5b61321","modified":1679741813189},{"_id":"public/css/hl_theme/school-book.css","hash":"ffbbcd13a74ac2404262c50b7a43053dfd0096ff","modified":1679741813189},{"_id":"public/css/style.css","hash":"39c55a665a57cef5d2363ee1358bd713f4fe3288","modified":1679741813189},{"_id":"public/css/gitalk.css","hash":"58177ce227c50ee359fbf99a4fdd26058887afc5","modified":1679741813189},{"_id":"public/js/iconfont.js","hash":"3a0869ca1b09af07d82987e343a3bc4cb9558ecb","modified":1679741813189},{"_id":"public/js/jquery.pjax.js","hash":"191c49fdb40dff115a49cfd2b30dffb888d86550","modified":1679741813189},{"_id":"public/js/script.js","hash":"f261fb46d822e9b89296c454a965ff34e4b244f9","modified":1679741813189},{"_id":"public/js/gitment.js","hash":"59a1e03f2b0ce61dd9bd405d3c52d3e07cc10dec","modified":1679741813189},{"_id":"public/css/fonts/selection.json","hash":"047b615ea32dc48dae5b964061427d41feaaafdf","modified":1679741813189},{"_id":"public/img/WechatIMG31.jpeg","hash":"c0a679f386c277d2c7711eec01efb5eae65ca773","modified":1679741813189},{"_id":"public/js/gitalk.js","hash":"26ba4841dcb4b178f730f53a8d1f4a7c89442b4f","modified":1679741813189},{"_id":"themes/3-hexo/source/img/alipay.png","hash":"dfcbf1d1bc97277eb0c3c1a113d09605b1c30c17","modified":1679742420254},{"_id":"themes/3-hexo/source/img/weixin.png","hash":"f1ec7a77bc4a3dcab117d9afc525f63d0b08076d","modified":1679742452285},{"_id":"source/_posts/变量和常量.md","hash":"4e0034195205fccf1f53a434fe3611edfaf35208","modified":1679747101123}],"Category":[{"name":"GoLang","_id":"clfnuwm5o0001cgukezta315w"},{"name":"go语言开发环境搭建 《开发环境准备》","parent":"clfnuwm5o0001cgukezta315w","_id":"clfnuwm5p0002cguk92qmfh3s"},{"name":"go语言基础之变量和常量","parent":"clfnuwm5o0001cgukezta315w","_id":"clfny222c0002ntukgzab16kr"},{"name":"休息下","parent":"clfnuwm5o0001cgukezta315w","_id":"clfny9v7e000kntuk0sd497rb"},{"name":"go语言开发环境搭建 《开发环境准备》","parent":"clfny9v7e000kntuk0sd497rb","_id":"clfny9v7e000lntuk9erv38bh"},{"name":"学习学习","_id":"clfnya2yu000ontuk0xej5uhx"},{"name":"休息下","parent":"clfnya2yu000ontuk0xej5uhx","_id":"clfnya2yu000pntukg5l0c0r2"},{"name":"go语言开发环境搭建 《开发环境准备》","parent":"clfnya2yu000pntukg5l0c0r2","_id":"clfnya2yu000qntukau8l92ph"},{"name":"go语言开发环境搭建 《开发环境准备》","parent":"clfnya2yu000ontuk0xej5uhx","_id":"clfnybs10000wntukg1mn1rp7"},{"name":"Go","_id":"clfnyc15x000zntuk82s9dgwf"},{"name":"go语言开发环境搭建 《开发环境准备》","parent":"clfnyc15x000zntuk82s9dgwf","_id":"clfnyc15y0010ntukhk03bbqx"},{"name":"go语言基础之变量和常量","parent":"clfnyc15x000zntuk82s9dgwf","_id":"clfnyc4nj0013ntuke1fhhb0h"}],"Data":[],"Page":[],"Post":[{"title":"《开发环境准备》","date":"2023-03-25T07:06:02.000Z","_content":"#  安装Go开发包\n## 下载\n[官网下载链接]<https://golang.google.cn/dl/>\n\n[go语言中文网_国内下载 ](https://studygolang.com/dl) https://studygolang.com/dl\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/68d1920713f440bda1322b64eda99f96~tplv-k3u1fbpfcp-watermark.image?)\n## 安装目录一定选一个好记的\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7384cdb008ca4efcb330e0e521f33795~tplv-k3u1fbpfcp-watermark.image?)\n## 安装完成后，输入`go version`查看go版本号。\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/856265a18c5f4a4c888ba80e81b5728d~tplv-k3u1fbpfcp-watermark.image?)\n## 配置GOPATH\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/46fcf70287c94436b3fad7d64a433331~tplv-k3u1fbpfcp-watermark.image?)\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/805d7ffd13d94c7cae2a0dd865556db8~tplv-k3u1fbpfcp-watermark.image?)\n## 详细步骤：\n1.  在自己的电脑上新建一个目录`D:\\go`（存放我编写的Go语言代码）\n\n0.  在环境变量里，新建一项：`GOPATH:D:\\go`\n\n0.  在`D:\\go`下新建三个文件夹，分别是：`bin`、`src`、`pkg`\n\n0.  把`D:\\go\\bin`这个目录添加到`PATH`这个环境变量的后面\n\n    0.  Win7是英文的`;`分隔\n    0.  Win10是单独一行\n\n0.  你电脑上`GOPATH`应该是有默认值的，通常是`%USERPROFILE%/go`， 你把这一项删掉，自己按照上面的步骤新建一个就可以了。\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b6b8375a7c74783a71ad37f40b7c5b1~tplv-k3u1fbpfcp-watermark.image?)\n\n## 一些go 语言常用网站\n[go语言中文网](https://studygolang.com/dl)\n\n[golang中国](https://www.golangtc.com/)\n\n[Golang标准库文档](https://studygolang.com/pkgdoc)\n\n[golang 社区](https://learnku.com/go)","source":"_posts/《开发环境准备》.md","raw":"---\ntitle: 《开发环境准备》\ndate: 2023-03-25 15:06:02\ntags: \n- golang\n- 后端\ncategories:\n- Go\n- go语言开发环境搭建 《开发环境准备》\n---\n#  安装Go开发包\n## 下载\n[官网下载链接]<https://golang.google.cn/dl/>\n\n[go语言中文网_国内下载 ](https://studygolang.com/dl) https://studygolang.com/dl\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/68d1920713f440bda1322b64eda99f96~tplv-k3u1fbpfcp-watermark.image?)\n## 安装目录一定选一个好记的\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7384cdb008ca4efcb330e0e521f33795~tplv-k3u1fbpfcp-watermark.image?)\n## 安装完成后，输入`go version`查看go版本号。\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/856265a18c5f4a4c888ba80e81b5728d~tplv-k3u1fbpfcp-watermark.image?)\n## 配置GOPATH\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/46fcf70287c94436b3fad7d64a433331~tplv-k3u1fbpfcp-watermark.image?)\n\n![image.png](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/805d7ffd13d94c7cae2a0dd865556db8~tplv-k3u1fbpfcp-watermark.image?)\n## 详细步骤：\n1.  在自己的电脑上新建一个目录`D:\\go`（存放我编写的Go语言代码）\n\n0.  在环境变量里，新建一项：`GOPATH:D:\\go`\n\n0.  在`D:\\go`下新建三个文件夹，分别是：`bin`、`src`、`pkg`\n\n0.  把`D:\\go\\bin`这个目录添加到`PATH`这个环境变量的后面\n\n    0.  Win7是英文的`;`分隔\n    0.  Win10是单独一行\n\n0.  你电脑上`GOPATH`应该是有默认值的，通常是`%USERPROFILE%/go`， 你把这一项删掉，自己按照上面的步骤新建一个就可以了。\n\n![image.png](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b6b8375a7c74783a71ad37f40b7c5b1~tplv-k3u1fbpfcp-watermark.image?)\n\n## 一些go 语言常用网站\n[go语言中文网](https://studygolang.com/dl)\n\n[golang中国](https://www.golangtc.com/)\n\n[Golang标准库文档](https://studygolang.com/pkgdoc)\n\n[golang 社区](https://learnku.com/go)","slug":"《开发环境准备》","published":1,"updated":"2023-03-25T12:32:51.435Z","_id":"clfnuwm5l0000cguk8xnd3bnt","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"安装Go开发包\"><a href=\"#安装Go开发包\" class=\"headerlink\" title=\"安装Go开发包\"></a>安装Go开发包</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>[官网下载链接]<a href=\"https://golang.google.cn/dl/\">https://golang.google.cn/dl/</a></p>\n<p><a href=\"https://studygolang.com/dl\">go语言中文网_国内下载 </a> <a href=\"https://studygolang.com/dl\">https://studygolang.com/dl</a></p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/68d1920713f440bda1322b64eda99f96~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"安装目录一定选一个好记的\"><a href=\"#安装目录一定选一个好记的\" class=\"headerlink\" title=\"安装目录一定选一个好记的\"></a>安装目录一定选一个好记的</h2><p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7384cdb008ca4efcb330e0e521f33795~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"安装完成后，输入go-version查看go版本号。\"><a href=\"#安装完成后，输入go-version查看go版本号。\" class=\"headerlink\" title=\"安装完成后，输入go version查看go版本号。\"></a>安装完成后，输入<code>go version</code>查看go版本号。</h2><p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/856265a18c5f4a4c888ba80e81b5728d~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"配置GOPATH\"><a href=\"#配置GOPATH\" class=\"headerlink\" title=\"配置GOPATH\"></a>配置GOPATH</h2><p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/46fcf70287c94436b3fad7d64a433331~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/805d7ffd13d94c7cae2a0dd865556db8~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"详细步骤：\"><a href=\"#详细步骤：\" class=\"headerlink\" title=\"详细步骤：\"></a>详细步骤：</h2><ol>\n<li><p>在自己的电脑上新建一个目录<code>D:\\go</code>（存放我编写的Go语言代码）</p>\n</li>\n<li><p>在环境变量里，新建一项：<code>GOPATH:D:\\go</code></p>\n</li>\n<li><p>在<code>D:\\go</code>下新建三个文件夹，分别是：<code>bin</code>、<code>src</code>、<code>pkg</code></p>\n</li>\n<li><p>把<code>D:\\go\\bin</code>这个目录添加到<code>PATH</code>这个环境变量的后面</p>\n<ol start=\"0\">\n<li>Win7是英文的<code>;</code>分隔</li>\n<li>Win10是单独一行</li>\n</ol>\n</li>\n<li><p>你电脑上<code>GOPATH</code>应该是有默认值的，通常是<code>%USERPROFILE%/go</code>， 你把这一项删掉，自己按照上面的步骤新建一个就可以了。</p>\n</li>\n</ol>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b6b8375a7c74783a71ad37f40b7c5b1~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"一些go-语言常用网站\"><a href=\"#一些go-语言常用网站\" class=\"headerlink\" title=\"一些go 语言常用网站\"></a>一些go 语言常用网站</h2><p><a href=\"https://studygolang.com/dl\">go语言中文网</a></p>\n<p><a href=\"https://www.golangtc.com/\">golang中国</a></p>\n<p><a href=\"https://studygolang.com/pkgdoc\">Golang标准库文档</a></p>\n<p><a href=\"https://learnku.com/go\">golang 社区</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"安装Go开发包\"><a href=\"#安装Go开发包\" class=\"headerlink\" title=\"安装Go开发包\"></a>安装Go开发包</h1><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>[官网下载链接]<a href=\"https://golang.google.cn/dl/\">https://golang.google.cn/dl/</a></p>\n<p><a href=\"https://studygolang.com/dl\">go语言中文网_国内下载 </a> <a href=\"https://studygolang.com/dl\">https://studygolang.com/dl</a></p>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/68d1920713f440bda1322b64eda99f96~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"安装目录一定选一个好记的\"><a href=\"#安装目录一定选一个好记的\" class=\"headerlink\" title=\"安装目录一定选一个好记的\"></a>安装目录一定选一个好记的</h2><p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7384cdb008ca4efcb330e0e521f33795~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"安装完成后，输入go-version查看go版本号。\"><a href=\"#安装完成后，输入go-version查看go版本号。\" class=\"headerlink\" title=\"安装完成后，输入go version查看go版本号。\"></a>安装完成后，输入<code>go version</code>查看go版本号。</h2><p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/856265a18c5f4a4c888ba80e81b5728d~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"配置GOPATH\"><a href=\"#配置GOPATH\" class=\"headerlink\" title=\"配置GOPATH\"></a>配置GOPATH</h2><p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/46fcf70287c94436b3fad7d64a433331~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/805d7ffd13d94c7cae2a0dd865556db8~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"详细步骤：\"><a href=\"#详细步骤：\" class=\"headerlink\" title=\"详细步骤：\"></a>详细步骤：</h2><ol>\n<li><p>在自己的电脑上新建一个目录<code>D:\\go</code>（存放我编写的Go语言代码）</p>\n</li>\n<li><p>在环境变量里，新建一项：<code>GOPATH:D:\\go</code></p>\n</li>\n<li><p>在<code>D:\\go</code>下新建三个文件夹，分别是：<code>bin</code>、<code>src</code>、<code>pkg</code></p>\n</li>\n<li><p>把<code>D:\\go\\bin</code>这个目录添加到<code>PATH</code>这个环境变量的后面</p>\n<ol start=\"0\">\n<li>Win7是英文的<code>;</code>分隔</li>\n<li>Win10是单独一行</li>\n</ol>\n</li>\n<li><p>你电脑上<code>GOPATH</code>应该是有默认值的，通常是<code>%USERPROFILE%/go</code>， 你把这一项删掉，自己按照上面的步骤新建一个就可以了。</p>\n</li>\n</ol>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2b6b8375a7c74783a71ad37f40b7c5b1~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<h2 id=\"一些go-语言常用网站\"><a href=\"#一些go-语言常用网站\" class=\"headerlink\" title=\"一些go 语言常用网站\"></a>一些go 语言常用网站</h2><p><a href=\"https://studygolang.com/dl\">go语言中文网</a></p>\n<p><a href=\"https://www.golangtc.com/\">golang中国</a></p>\n<p><a href=\"https://studygolang.com/pkgdoc\">Golang标准库文档</a></p>\n<p><a href=\"https://learnku.com/go\">golang 社区</a></p>\n"},{"title":"变量和常量","date":"2023-03-25T12:23:48.000Z","_content":"# 标识符与关键字\n## 标识符\n在编程语言中标识符就是程序员定义的具有特殊意义的词，比如变量名、常量名、函数名等等。 Go语言中标识符由字母数字和`_`(下划线）组成，并且只能以字母和`_`开头。 举几个例子：`abc`, `_`, `_123`, `a123`。\n## 关键字\n关键字是指编程语言中预先定义好的具有特殊含义的标识符。 关键字和保留字都不建议用作变量名。\nGo语言中有25个关键字：\n```\n  break        default      func         interface    select\n  case         defer        go           map          struct\n  chan         else         goto         package      switch\n  const        fallthrough  if           range        type\n  continue     for          import       return       var\n```\n此外，Go语言中还有37个保留字。\n```\nConstants:    true  false  iota  nil\n\nTypes:    int  int8  int16  int32  int64  \n          uint  uint8  uint16  uint32  uint64  uintptr\n          float32  float64  complex128  complex64\n          bool  byte  rune  string  error\n\nFunctions:   make  len  cap  new  append  copy  close  delete\n             complex  real  imag\n             panic  recover\n```\n# 变量\n## 变量的来历\n程序运行过程中的数据都是保存在内存中，我们想要在代码中操作某个数据时就需要去内存上找到这个变量，但是如果我们直接在代码中通过内存地址去操作变量的话，代码的可读性会非常差而且还容易出错，所以我们就利用变量将这个数据的内存地址保存起来，以后直接通过这个变量就能找到内存上对应的数据了\n## 变量类型\n变量（Variable）的功能是存储数据。不同的变量保存的数据类型可能会不一样。经过半个多世纪的发展，编程语言已经基本形成了一套固定的类型，常见变量的数据类型有：整型、浮点型、布尔型等。\n\nGo语言中的每一个变量都有自己的类型，并且变量必须经过声明才能开始使用。\n## 变量声明\nGo语言中的变量需要声明后才能使用，同一作用域内不支持重复声明。 并且Go语言的变量声明后必须使用。\n### 标准声明\nGo语言的变量声明格式为：\n```\nvar 变量名 变量类型\n```\n变量声明以关键字`var`开头，变量类型放在变量的后面，行尾无需分号。 举个例子：\n\n```\nvar name string\nvar age int\nvar isOk bool\n```\n### 批量声明\n\n每声明一个变量就需要写`var`关键字会比较繁琐，go语言中还支持批量变量声明：\n\n```\nvar (\n    a string\n    b int\n    c bool\n    d float32\n)\n```\n### 变量的初始化\nGo语言在声明变量的时候，会自动对变量对应的内存区域进行初始化操作。每个变量会被初始化成其类型的默认值，例如： 整型和浮点型变量的默认值为`0`。 字符串变量的默认值为`空字符串`。 布尔型变量默认为`false`。 切片、函数、指针变量的默认为`nil`。\n当然我们也可在声明变量的时候为其指定初始值。变量初始化的标准格式如下：\n```\nvar 变量名 类型 = 表达式\n```\n举个例子：\n```\nvar name string = \"Q1mi\"\nvar age int = 18\n```\n或者一次初始化多个变量\n```\nvar name, age = \"Q1mi\", 20\n```\n#### 类型推导\n\n有时候我们会将变量的类型省略，这个时候编译器会根据等号右边的值来推导变量的类型完成初始化。\n\n```\nvar name = \"Q1mi\"\nvar age = 18\n```\n#### 短变量声明\n在函数内部，可以使用更简略的 `:=` 方式声明并初始化变量。\n```\npackage main\n\nimport (\n\t\"fmt\"\n)\n// 全局变量m\nvar m = 100\n\nfunc main() {\n\tn := 10\n\tm := 200 // 此处声明局部变量m\n\tfmt.Println(m, n)\n}\n```\n#### 匿名变量\n在使用多重赋值时，如果想要忽略某个值，可以使用`匿名变量（anonymous variable）`。 匿名变量用一个下划线`_`表示，例如：\n```\nfunc foo() (int, string) {\n\treturn 10, \"Q1mi\"\n}\nfunc main() {\n\tx, _ := foo()\n\t_, y := foo()\n\tfmt.Println(\"x=\", x)\n\tfmt.Println(\"y=\", y)\n}\n```\n匿名变量不占用命名空间，不会分配内存，所以匿名变量之间不存在重复声明。 (在`Lua`等编程语言里，匿名变量也被叫做哑元变量。)\n注意事项：\n\n1.  函数外的每个语句都必须以关键字开始（var、const、func等）\n1.  `:=`不能使用在函数外。\n1.  `_`多用于占位，表示忽略值。\n\n# 常量\n相对于变量，常量是恒定不变的值，多用于定义程序运行期间不会改变的那些值。 常量的声明和变量声明非常类似，只是把`var`换成了`const`，常量在定义的时候必须赋值。\n```\nconst pi = 3.1415\nconst e = 2.7182\n```\n声明了`pi`和`e`这两个常量之后，在整个程序运行期间它们的值都不能再发生变化了。\n多个常量也可以一起声明：\n```\nconst (\n    pi = 3.1415\n    e = 2.7182\n)\n```\nconst同时声明多个常量时，如果省略了值则表示和上面一行的值相同。 例如：\n```\nconst (\n    n1 = 100\n    n2\n    n3\n)\n```\n上面示例中，常量`n1`、`n2`、`n3`的值都是100。\n## iota\n`iota`是go语言的常量计数器，只能在常量的表达式中使用。\n\n`iota`在const关键字出现时将被重置为0。const中每新增一行常量声明将使`iota`计数一次(iota可理解为const语句块中的行索引)。 使用iota能简化定义，在定义枚举时很有用。\n\n举个例子：\n```\nconst (\n        n1 = iota //0\n        n2        //1\n        n3        //2\n        n4        //3\n\t)\n```\n### 几个常见的`iota`示例:\n使用`_`跳过某些值\n```\nconst (\n        n1 = iota //0\n        n2        //1\n        _\n        n4        //3\n\t)\n```\n`iota`声明中间插队\n```\nconst (\n        n1 = iota //0\n        n2 = 100  //100\n        n3 = iota //2\n        n4        //3\n\t)\n\tconst n5 = iota //0\n```\n定义数量级 （这里的`<<`表示左移操作，`1<<10`表示将1的二进制表示向左移10位，也就是由`1`变成了`10000000000`，也就是十进制的1024。同理`2<<2`表示将2的二进制表示向左移2位，也就是由`10`变成了`1000`，也就是十进制的8。）\n```\nconst (\n        _  = iota\n        KB = 1 << (10 * iota)\n        MB = 1 << (10 * iota)\n        GB = 1 << (10 * iota)\n        TB = 1 << (10 * iota)\n        PB = 1 << (10 * iota)\n\t)\n```\n多个`iota`定义在一行\n```\nconst (\n        a, b = iota + 1, iota + 2 //1,2\n        c, d                      //2,3\n        e, f                      //3,4\n\t)\n```\n","source":"_posts/变量和常量.md","raw":"---\ntitle: 变量和常量\ndate: 2023-03-25 20:23:48\ntags: \n- golang\n- 后端\ncategories:\n- Go\n- go语言基础之变量和常量\n---\n# 标识符与关键字\n## 标识符\n在编程语言中标识符就是程序员定义的具有特殊意义的词，比如变量名、常量名、函数名等等。 Go语言中标识符由字母数字和`_`(下划线）组成，并且只能以字母和`_`开头。 举几个例子：`abc`, `_`, `_123`, `a123`。\n## 关键字\n关键字是指编程语言中预先定义好的具有特殊含义的标识符。 关键字和保留字都不建议用作变量名。\nGo语言中有25个关键字：\n```\n  break        default      func         interface    select\n  case         defer        go           map          struct\n  chan         else         goto         package      switch\n  const        fallthrough  if           range        type\n  continue     for          import       return       var\n```\n此外，Go语言中还有37个保留字。\n```\nConstants:    true  false  iota  nil\n\nTypes:    int  int8  int16  int32  int64  \n          uint  uint8  uint16  uint32  uint64  uintptr\n          float32  float64  complex128  complex64\n          bool  byte  rune  string  error\n\nFunctions:   make  len  cap  new  append  copy  close  delete\n             complex  real  imag\n             panic  recover\n```\n# 变量\n## 变量的来历\n程序运行过程中的数据都是保存在内存中，我们想要在代码中操作某个数据时就需要去内存上找到这个变量，但是如果我们直接在代码中通过内存地址去操作变量的话，代码的可读性会非常差而且还容易出错，所以我们就利用变量将这个数据的内存地址保存起来，以后直接通过这个变量就能找到内存上对应的数据了\n## 变量类型\n变量（Variable）的功能是存储数据。不同的变量保存的数据类型可能会不一样。经过半个多世纪的发展，编程语言已经基本形成了一套固定的类型，常见变量的数据类型有：整型、浮点型、布尔型等。\n\nGo语言中的每一个变量都有自己的类型，并且变量必须经过声明才能开始使用。\n## 变量声明\nGo语言中的变量需要声明后才能使用，同一作用域内不支持重复声明。 并且Go语言的变量声明后必须使用。\n### 标准声明\nGo语言的变量声明格式为：\n```\nvar 变量名 变量类型\n```\n变量声明以关键字`var`开头，变量类型放在变量的后面，行尾无需分号。 举个例子：\n\n```\nvar name string\nvar age int\nvar isOk bool\n```\n### 批量声明\n\n每声明一个变量就需要写`var`关键字会比较繁琐，go语言中还支持批量变量声明：\n\n```\nvar (\n    a string\n    b int\n    c bool\n    d float32\n)\n```\n### 变量的初始化\nGo语言在声明变量的时候，会自动对变量对应的内存区域进行初始化操作。每个变量会被初始化成其类型的默认值，例如： 整型和浮点型变量的默认值为`0`。 字符串变量的默认值为`空字符串`。 布尔型变量默认为`false`。 切片、函数、指针变量的默认为`nil`。\n当然我们也可在声明变量的时候为其指定初始值。变量初始化的标准格式如下：\n```\nvar 变量名 类型 = 表达式\n```\n举个例子：\n```\nvar name string = \"Q1mi\"\nvar age int = 18\n```\n或者一次初始化多个变量\n```\nvar name, age = \"Q1mi\", 20\n```\n#### 类型推导\n\n有时候我们会将变量的类型省略，这个时候编译器会根据等号右边的值来推导变量的类型完成初始化。\n\n```\nvar name = \"Q1mi\"\nvar age = 18\n```\n#### 短变量声明\n在函数内部，可以使用更简略的 `:=` 方式声明并初始化变量。\n```\npackage main\n\nimport (\n\t\"fmt\"\n)\n// 全局变量m\nvar m = 100\n\nfunc main() {\n\tn := 10\n\tm := 200 // 此处声明局部变量m\n\tfmt.Println(m, n)\n}\n```\n#### 匿名变量\n在使用多重赋值时，如果想要忽略某个值，可以使用`匿名变量（anonymous variable）`。 匿名变量用一个下划线`_`表示，例如：\n```\nfunc foo() (int, string) {\n\treturn 10, \"Q1mi\"\n}\nfunc main() {\n\tx, _ := foo()\n\t_, y := foo()\n\tfmt.Println(\"x=\", x)\n\tfmt.Println(\"y=\", y)\n}\n```\n匿名变量不占用命名空间，不会分配内存，所以匿名变量之间不存在重复声明。 (在`Lua`等编程语言里，匿名变量也被叫做哑元变量。)\n注意事项：\n\n1.  函数外的每个语句都必须以关键字开始（var、const、func等）\n1.  `:=`不能使用在函数外。\n1.  `_`多用于占位，表示忽略值。\n\n# 常量\n相对于变量，常量是恒定不变的值，多用于定义程序运行期间不会改变的那些值。 常量的声明和变量声明非常类似，只是把`var`换成了`const`，常量在定义的时候必须赋值。\n```\nconst pi = 3.1415\nconst e = 2.7182\n```\n声明了`pi`和`e`这两个常量之后，在整个程序运行期间它们的值都不能再发生变化了。\n多个常量也可以一起声明：\n```\nconst (\n    pi = 3.1415\n    e = 2.7182\n)\n```\nconst同时声明多个常量时，如果省略了值则表示和上面一行的值相同。 例如：\n```\nconst (\n    n1 = 100\n    n2\n    n3\n)\n```\n上面示例中，常量`n1`、`n2`、`n3`的值都是100。\n## iota\n`iota`是go语言的常量计数器，只能在常量的表达式中使用。\n\n`iota`在const关键字出现时将被重置为0。const中每新增一行常量声明将使`iota`计数一次(iota可理解为const语句块中的行索引)。 使用iota能简化定义，在定义枚举时很有用。\n\n举个例子：\n```\nconst (\n        n1 = iota //0\n        n2        //1\n        n3        //2\n        n4        //3\n\t)\n```\n### 几个常见的`iota`示例:\n使用`_`跳过某些值\n```\nconst (\n        n1 = iota //0\n        n2        //1\n        _\n        n4        //3\n\t)\n```\n`iota`声明中间插队\n```\nconst (\n        n1 = iota //0\n        n2 = 100  //100\n        n3 = iota //2\n        n4        //3\n\t)\n\tconst n5 = iota //0\n```\n定义数量级 （这里的`<<`表示左移操作，`1<<10`表示将1的二进制表示向左移10位，也就是由`1`变成了`10000000000`，也就是十进制的1024。同理`2<<2`表示将2的二进制表示向左移2位，也就是由`10`变成了`1000`，也就是十进制的8。）\n```\nconst (\n        _  = iota\n        KB = 1 << (10 * iota)\n        MB = 1 << (10 * iota)\n        GB = 1 << (10 * iota)\n        TB = 1 << (10 * iota)\n        PB = 1 << (10 * iota)\n\t)\n```\n多个`iota`定义在一行\n```\nconst (\n        a, b = iota + 1, iota + 2 //1,2\n        c, d                      //2,3\n        e, f                      //3,4\n\t)\n```\n","slug":"变量和常量","published":1,"updated":"2023-03-25T12:32:55.717Z","_id":"clfny222a0000ntuk6d7cc2av","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"标识符与关键字\"><a href=\"#标识符与关键字\" class=\"headerlink\" title=\"标识符与关键字\"></a>标识符与关键字</h1><h2 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h2><p>在编程语言中标识符就是程序员定义的具有特殊意义的词，比如变量名、常量名、函数名等等。 Go语言中标识符由字母数字和<code>_</code>(下划线）组成，并且只能以字母和<code>_</code>开头。 举几个例子：<code>abc</code>, <code>_</code>, <code>_123</code>, <code>a123</code>。</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><p>关键字是指编程语言中预先定义好的具有特殊含义的标识符。 关键字和保留字都不建议用作变量名。<br>Go语言中有25个关键字：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">break        default      func         interface    select</span><br><span class=\"line\">case         defer        go           map          struct</span><br><span class=\"line\">chan         else         goto         package      switch</span><br><span class=\"line\">const        fallthrough  if           range        type</span><br><span class=\"line\">continue     for          import       return       var</span><br></pre></td></tr></table></figure>\n<p>此外，Go语言中还有37个保留字。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Constants:    true  false  iota  nil</span><br><span class=\"line\"></span><br><span class=\"line\">Types:    int  int8  int16  int32  int64  </span><br><span class=\"line\">          uint  uint8  uint16  uint32  uint64  uintptr</span><br><span class=\"line\">          float32  float64  complex128  complex64</span><br><span class=\"line\">          bool  byte  rune  string  error</span><br><span class=\"line\"></span><br><span class=\"line\">Functions:   make  len  cap  new  append  copy  close  delete</span><br><span class=\"line\">             complex  real  imag</span><br><span class=\"line\">             panic  recover</span><br></pre></td></tr></table></figure>\n<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><h2 id=\"变量的来历\"><a href=\"#变量的来历\" class=\"headerlink\" title=\"变量的来历\"></a>变量的来历</h2><p>程序运行过程中的数据都是保存在内存中，我们想要在代码中操作某个数据时就需要去内存上找到这个变量，但是如果我们直接在代码中通过内存地址去操作变量的话，代码的可读性会非常差而且还容易出错，所以我们就利用变量将这个数据的内存地址保存起来，以后直接通过这个变量就能找到内存上对应的数据了</p>\n<h2 id=\"变量类型\"><a href=\"#变量类型\" class=\"headerlink\" title=\"变量类型\"></a>变量类型</h2><p>变量（Variable）的功能是存储数据。不同的变量保存的数据类型可能会不一样。经过半个多世纪的发展，编程语言已经基本形成了一套固定的类型，常见变量的数据类型有：整型、浮点型、布尔型等。</p>\n<p>Go语言中的每一个变量都有自己的类型，并且变量必须经过声明才能开始使用。</p>\n<h2 id=\"变量声明\"><a href=\"#变量声明\" class=\"headerlink\" title=\"变量声明\"></a>变量声明</h2><p>Go语言中的变量需要声明后才能使用，同一作用域内不支持重复声明。 并且Go语言的变量声明后必须使用。</p>\n<h3 id=\"标准声明\"><a href=\"#标准声明\" class=\"headerlink\" title=\"标准声明\"></a>标准声明</h3><p>Go语言的变量声明格式为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var 变量名 变量类型</span><br></pre></td></tr></table></figure>\n<p>变量声明以关键字<code>var</code>开头，变量类型放在变量的后面，行尾无需分号。 举个例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name string</span><br><span class=\"line\">var age int</span><br><span class=\"line\">var isOk bool</span><br></pre></td></tr></table></figure>\n<h3 id=\"批量声明\"><a href=\"#批量声明\" class=\"headerlink\" title=\"批量声明\"></a>批量声明</h3><p>每声明一个变量就需要写<code>var</code>关键字会比较繁琐，go语言中还支持批量变量声明：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var (</span><br><span class=\"line\">    a string</span><br><span class=\"line\">    b int</span><br><span class=\"line\">    c bool</span><br><span class=\"line\">    d float32</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h3 id=\"变量的初始化\"><a href=\"#变量的初始化\" class=\"headerlink\" title=\"变量的初始化\"></a>变量的初始化</h3><p>Go语言在声明变量的时候，会自动对变量对应的内存区域进行初始化操作。每个变量会被初始化成其类型的默认值，例如： 整型和浮点型变量的默认值为<code>0</code>。 字符串变量的默认值为<code>空字符串</code>。 布尔型变量默认为<code>false</code>。 切片、函数、指针变量的默认为<code>nil</code>。<br>当然我们也可在声明变量的时候为其指定初始值。变量初始化的标准格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var 变量名 类型 = 表达式</span><br></pre></td></tr></table></figure>\n<p>举个例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name string = &quot;Q1mi&quot;</span><br><span class=\"line\">var age int = 18</span><br></pre></td></tr></table></figure>\n<p>或者一次初始化多个变量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name, age = &quot;Q1mi&quot;, 20</span><br></pre></td></tr></table></figure>\n<h4 id=\"类型推导\"><a href=\"#类型推导\" class=\"headerlink\" title=\"类型推导\"></a>类型推导</h4><p>有时候我们会将变量的类型省略，这个时候编译器会根据等号右边的值来推导变量的类型完成初始化。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name = &quot;Q1mi&quot;</span><br><span class=\"line\">var age = 18</span><br></pre></td></tr></table></figure>\n<h4 id=\"短变量声明\"><a href=\"#短变量声明\" class=\"headerlink\" title=\"短变量声明\"></a>短变量声明</h4><p>在函数内部，可以使用更简略的 <code>:=</code> 方式声明并初始化变量。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\">// 全局变量m</span><br><span class=\"line\">var m = 100</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tn := 10</span><br><span class=\"line\">\tm := 200 // 此处声明局部变量m</span><br><span class=\"line\">\tfmt.Println(m, n)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"匿名变量\"><a href=\"#匿名变量\" class=\"headerlink\" title=\"匿名变量\"></a>匿名变量</h4><p>在使用多重赋值时，如果想要忽略某个值，可以使用<code>匿名变量（anonymous variable）</code>。 匿名变量用一个下划线<code>_</code>表示，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func foo() (int, string) &#123;</span><br><span class=\"line\">\treturn 10, &quot;Q1mi&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tx, _ := foo()</span><br><span class=\"line\">\t_, y := foo()</span><br><span class=\"line\">\tfmt.Println(&quot;x=&quot;, x)</span><br><span class=\"line\">\tfmt.Println(&quot;y=&quot;, y)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>匿名变量不占用命名空间，不会分配内存，所以匿名变量之间不存在重复声明。 (在<code>Lua</code>等编程语言里，匿名变量也被叫做哑元变量。)<br>注意事项：</p>\n<ol>\n<li>函数外的每个语句都必须以关键字开始（var、const、func等）</li>\n<li><code>:=</code>不能使用在函数外。</li>\n<li><code>_</code>多用于占位，表示忽略值。</li>\n</ol>\n<h1 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h1><p>相对于变量，常量是恒定不变的值，多用于定义程序运行期间不会改变的那些值。 常量的声明和变量声明非常类似，只是把<code>var</code>换成了<code>const</code>，常量在定义的时候必须赋值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const pi = 3.1415</span><br><span class=\"line\">const e = 2.7182</span><br></pre></td></tr></table></figure>\n<p>声明了<code>pi</code>和<code>e</code>这两个常量之后，在整个程序运行期间它们的值都不能再发生变化了。<br>多个常量也可以一起声明：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">    pi = 3.1415</span><br><span class=\"line\">    e = 2.7182</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>const同时声明多个常量时，如果省略了值则表示和上面一行的值相同。 例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">    n1 = 100</span><br><span class=\"line\">    n2</span><br><span class=\"line\">    n3</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>上面示例中，常量<code>n1</code>、<code>n2</code>、<code>n3</code>的值都是100。</p>\n<h2 id=\"iota\"><a href=\"#iota\" class=\"headerlink\" title=\"iota\"></a>iota</h2><p><code>iota</code>是go语言的常量计数器，只能在常量的表达式中使用。</p>\n<p><code>iota</code>在const关键字出现时将被重置为0。const中每新增一行常量声明将使<code>iota</code>计数一次(iota可理解为const语句块中的行索引)。 使用iota能简化定义，在定义枚举时很有用。</p>\n<p>举个例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">        n1 = iota //0</span><br><span class=\"line\">        n2        //1</span><br><span class=\"line\">        n3        //2</span><br><span class=\"line\">        n4        //3</span><br><span class=\"line\">\t)</span><br></pre></td></tr></table></figure>\n<h3 id=\"几个常见的iota示例\"><a href=\"#几个常见的iota示例\" class=\"headerlink\" title=\"几个常见的iota示例:\"></a>几个常见的<code>iota</code>示例:</h3><p>使用<code>_</code>跳过某些值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">        n1 = iota //0</span><br><span class=\"line\">        n2        //1</span><br><span class=\"line\">        _</span><br><span class=\"line\">        n4        //3</span><br><span class=\"line\">\t)</span><br></pre></td></tr></table></figure>\n<p><code>iota</code>声明中间插队</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">        n1 = iota //0</span><br><span class=\"line\">        n2 = 100  //100</span><br><span class=\"line\">        n3 = iota //2</span><br><span class=\"line\">        n4        //3</span><br><span class=\"line\">\t)</span><br><span class=\"line\">\tconst n5 = iota //0</span><br></pre></td></tr></table></figure>\n<p>定义数量级 （这里的<code>&lt;&lt;</code>表示左移操作，<code>1&lt;&lt;10</code>表示将1的二进制表示向左移10位，也就是由<code>1</code>变成了<code>10000000000</code>，也就是十进制的1024。同理<code>2&lt;&lt;2</code>表示将2的二进制表示向左移2位，也就是由<code>10</code>变成了<code>1000</code>，也就是十进制的8。）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">        _  = iota</span><br><span class=\"line\">        KB = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">        MB = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">        GB = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">        TB = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">        PB = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">\t)</span><br></pre></td></tr></table></figure>\n<p>多个<code>iota</code>定义在一行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">        a, b = iota + 1, iota + 2 //1,2</span><br><span class=\"line\">        c, d                      //2,3</span><br><span class=\"line\">        e, f                      //3,4</span><br><span class=\"line\">\t)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"标识符与关键字\"><a href=\"#标识符与关键字\" class=\"headerlink\" title=\"标识符与关键字\"></a>标识符与关键字</h1><h2 id=\"标识符\"><a href=\"#标识符\" class=\"headerlink\" title=\"标识符\"></a>标识符</h2><p>在编程语言中标识符就是程序员定义的具有特殊意义的词，比如变量名、常量名、函数名等等。 Go语言中标识符由字母数字和<code>_</code>(下划线）组成，并且只能以字母和<code>_</code>开头。 举几个例子：<code>abc</code>, <code>_</code>, <code>_123</code>, <code>a123</code>。</p>\n<h2 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a>关键字</h2><p>关键字是指编程语言中预先定义好的具有特殊含义的标识符。 关键字和保留字都不建议用作变量名。<br>Go语言中有25个关键字：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">break        default      func         interface    select</span><br><span class=\"line\">case         defer        go           map          struct</span><br><span class=\"line\">chan         else         goto         package      switch</span><br><span class=\"line\">const        fallthrough  if           range        type</span><br><span class=\"line\">continue     for          import       return       var</span><br></pre></td></tr></table></figure>\n<p>此外，Go语言中还有37个保留字。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Constants:    true  false  iota  nil</span><br><span class=\"line\"></span><br><span class=\"line\">Types:    int  int8  int16  int32  int64  </span><br><span class=\"line\">          uint  uint8  uint16  uint32  uint64  uintptr</span><br><span class=\"line\">          float32  float64  complex128  complex64</span><br><span class=\"line\">          bool  byte  rune  string  error</span><br><span class=\"line\"></span><br><span class=\"line\">Functions:   make  len  cap  new  append  copy  close  delete</span><br><span class=\"line\">             complex  real  imag</span><br><span class=\"line\">             panic  recover</span><br></pre></td></tr></table></figure>\n<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><h2 id=\"变量的来历\"><a href=\"#变量的来历\" class=\"headerlink\" title=\"变量的来历\"></a>变量的来历</h2><p>程序运行过程中的数据都是保存在内存中，我们想要在代码中操作某个数据时就需要去内存上找到这个变量，但是如果我们直接在代码中通过内存地址去操作变量的话，代码的可读性会非常差而且还容易出错，所以我们就利用变量将这个数据的内存地址保存起来，以后直接通过这个变量就能找到内存上对应的数据了</p>\n<h2 id=\"变量类型\"><a href=\"#变量类型\" class=\"headerlink\" title=\"变量类型\"></a>变量类型</h2><p>变量（Variable）的功能是存储数据。不同的变量保存的数据类型可能会不一样。经过半个多世纪的发展，编程语言已经基本形成了一套固定的类型，常见变量的数据类型有：整型、浮点型、布尔型等。</p>\n<p>Go语言中的每一个变量都有自己的类型，并且变量必须经过声明才能开始使用。</p>\n<h2 id=\"变量声明\"><a href=\"#变量声明\" class=\"headerlink\" title=\"变量声明\"></a>变量声明</h2><p>Go语言中的变量需要声明后才能使用，同一作用域内不支持重复声明。 并且Go语言的变量声明后必须使用。</p>\n<h3 id=\"标准声明\"><a href=\"#标准声明\" class=\"headerlink\" title=\"标准声明\"></a>标准声明</h3><p>Go语言的变量声明格式为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var 变量名 变量类型</span><br></pre></td></tr></table></figure>\n<p>变量声明以关键字<code>var</code>开头，变量类型放在变量的后面，行尾无需分号。 举个例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name string</span><br><span class=\"line\">var age int</span><br><span class=\"line\">var isOk bool</span><br></pre></td></tr></table></figure>\n<h3 id=\"批量声明\"><a href=\"#批量声明\" class=\"headerlink\" title=\"批量声明\"></a>批量声明</h3><p>每声明一个变量就需要写<code>var</code>关键字会比较繁琐，go语言中还支持批量变量声明：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var (</span><br><span class=\"line\">    a string</span><br><span class=\"line\">    b int</span><br><span class=\"line\">    c bool</span><br><span class=\"line\">    d float32</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h3 id=\"变量的初始化\"><a href=\"#变量的初始化\" class=\"headerlink\" title=\"变量的初始化\"></a>变量的初始化</h3><p>Go语言在声明变量的时候，会自动对变量对应的内存区域进行初始化操作。每个变量会被初始化成其类型的默认值，例如： 整型和浮点型变量的默认值为<code>0</code>。 字符串变量的默认值为<code>空字符串</code>。 布尔型变量默认为<code>false</code>。 切片、函数、指针变量的默认为<code>nil</code>。<br>当然我们也可在声明变量的时候为其指定初始值。变量初始化的标准格式如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var 变量名 类型 = 表达式</span><br></pre></td></tr></table></figure>\n<p>举个例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name string = &quot;Q1mi&quot;</span><br><span class=\"line\">var age int = 18</span><br></pre></td></tr></table></figure>\n<p>或者一次初始化多个变量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name, age = &quot;Q1mi&quot;, 20</span><br></pre></td></tr></table></figure>\n<h4 id=\"类型推导\"><a href=\"#类型推导\" class=\"headerlink\" title=\"类型推导\"></a>类型推导</h4><p>有时候我们会将变量的类型省略，这个时候编译器会根据等号右边的值来推导变量的类型完成初始化。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var name = &quot;Q1mi&quot;</span><br><span class=\"line\">var age = 18</span><br></pre></td></tr></table></figure>\n<h4 id=\"短变量声明\"><a href=\"#短变量声明\" class=\"headerlink\" title=\"短变量声明\"></a>短变量声明</h4><p>在函数内部，可以使用更简略的 <code>:=</code> 方式声明并初始化变量。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\"></span><br><span class=\"line\">import (</span><br><span class=\"line\">\t&quot;fmt&quot;</span><br><span class=\"line\">)</span><br><span class=\"line\">// 全局变量m</span><br><span class=\"line\">var m = 100</span><br><span class=\"line\"></span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tn := 10</span><br><span class=\"line\">\tm := 200 // 此处声明局部变量m</span><br><span class=\"line\">\tfmt.Println(m, n)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"匿名变量\"><a href=\"#匿名变量\" class=\"headerlink\" title=\"匿名变量\"></a>匿名变量</h4><p>在使用多重赋值时，如果想要忽略某个值，可以使用<code>匿名变量（anonymous variable）</code>。 匿名变量用一个下划线<code>_</code>表示，例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func foo() (int, string) &#123;</span><br><span class=\"line\">\treturn 10, &quot;Q1mi&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">func main() &#123;</span><br><span class=\"line\">\tx, _ := foo()</span><br><span class=\"line\">\t_, y := foo()</span><br><span class=\"line\">\tfmt.Println(&quot;x=&quot;, x)</span><br><span class=\"line\">\tfmt.Println(&quot;y=&quot;, y)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>匿名变量不占用命名空间，不会分配内存，所以匿名变量之间不存在重复声明。 (在<code>Lua</code>等编程语言里，匿名变量也被叫做哑元变量。)<br>注意事项：</p>\n<ol>\n<li>函数外的每个语句都必须以关键字开始（var、const、func等）</li>\n<li><code>:=</code>不能使用在函数外。</li>\n<li><code>_</code>多用于占位，表示忽略值。</li>\n</ol>\n<h1 id=\"常量\"><a href=\"#常量\" class=\"headerlink\" title=\"常量\"></a>常量</h1><p>相对于变量，常量是恒定不变的值，多用于定义程序运行期间不会改变的那些值。 常量的声明和变量声明非常类似，只是把<code>var</code>换成了<code>const</code>，常量在定义的时候必须赋值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const pi = 3.1415</span><br><span class=\"line\">const e = 2.7182</span><br></pre></td></tr></table></figure>\n<p>声明了<code>pi</code>和<code>e</code>这两个常量之后，在整个程序运行期间它们的值都不能再发生变化了。<br>多个常量也可以一起声明：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">    pi = 3.1415</span><br><span class=\"line\">    e = 2.7182</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>const同时声明多个常量时，如果省略了值则表示和上面一行的值相同。 例如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">    n1 = 100</span><br><span class=\"line\">    n2</span><br><span class=\"line\">    n3</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>上面示例中，常量<code>n1</code>、<code>n2</code>、<code>n3</code>的值都是100。</p>\n<h2 id=\"iota\"><a href=\"#iota\" class=\"headerlink\" title=\"iota\"></a>iota</h2><p><code>iota</code>是go语言的常量计数器，只能在常量的表达式中使用。</p>\n<p><code>iota</code>在const关键字出现时将被重置为0。const中每新增一行常量声明将使<code>iota</code>计数一次(iota可理解为const语句块中的行索引)。 使用iota能简化定义，在定义枚举时很有用。</p>\n<p>举个例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">        n1 = iota //0</span><br><span class=\"line\">        n2        //1</span><br><span class=\"line\">        n3        //2</span><br><span class=\"line\">        n4        //3</span><br><span class=\"line\">\t)</span><br></pre></td></tr></table></figure>\n<h3 id=\"几个常见的iota示例\"><a href=\"#几个常见的iota示例\" class=\"headerlink\" title=\"几个常见的iota示例:\"></a>几个常见的<code>iota</code>示例:</h3><p>使用<code>_</code>跳过某些值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">        n1 = iota //0</span><br><span class=\"line\">        n2        //1</span><br><span class=\"line\">        _</span><br><span class=\"line\">        n4        //3</span><br><span class=\"line\">\t)</span><br></pre></td></tr></table></figure>\n<p><code>iota</code>声明中间插队</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">        n1 = iota //0</span><br><span class=\"line\">        n2 = 100  //100</span><br><span class=\"line\">        n3 = iota //2</span><br><span class=\"line\">        n4        //3</span><br><span class=\"line\">\t)</span><br><span class=\"line\">\tconst n5 = iota //0</span><br></pre></td></tr></table></figure>\n<p>定义数量级 （这里的<code>&lt;&lt;</code>表示左移操作，<code>1&lt;&lt;10</code>表示将1的二进制表示向左移10位，也就是由<code>1</code>变成了<code>10000000000</code>，也就是十进制的1024。同理<code>2&lt;&lt;2</code>表示将2的二进制表示向左移2位，也就是由<code>10</code>变成了<code>1000</code>，也就是十进制的8。）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">        _  = iota</span><br><span class=\"line\">        KB = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">        MB = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">        GB = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">        TB = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">        PB = 1 &lt;&lt; (10 * iota)</span><br><span class=\"line\">\t)</span><br></pre></td></tr></table></figure>\n<p>多个<code>iota</code>定义在一行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const (</span><br><span class=\"line\">        a, b = iota + 1, iota + 2 //1,2</span><br><span class=\"line\">        c, d                      //2,3</span><br><span class=\"line\">        e, f                      //3,4</span><br><span class=\"line\">\t)</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clfnuwm5l0000cguk8xnd3bnt","category_id":"clfnyc15x000zntuk82s9dgwf","_id":"clfnyc15y0011ntukbzfgh2et"},{"post_id":"clfnuwm5l0000cguk8xnd3bnt","category_id":"clfnyc15y0010ntukhk03bbqx","_id":"clfnyc15y0012ntukd9kjaqgd"},{"post_id":"clfny222a0000ntuk6d7cc2av","category_id":"clfnyc15x000zntuk82s9dgwf","_id":"clfnyc4nj0014ntukcz5d6ww2"},{"post_id":"clfny222a0000ntuk6d7cc2av","category_id":"clfnyc4nj0013ntuke1fhhb0h","_id":"clfnyc4nj0015ntuk5nrx1o8y"}],"PostTag":[{"post_id":"clfny222a0000ntuk6d7cc2av","tag_id":"clfny922s000entukgiayfq07","_id":"clfny922s000gntuk4807c3aa"},{"post_id":"clfny222a0000ntuk6d7cc2av","tag_id":"clfny922s000fntuk9mq7a8f9","_id":"clfny922s000hntukbv4ad9dm"},{"post_id":"clfnuwm5l0000cguk8xnd3bnt","tag_id":"clfny922s000entukgiayfq07","_id":"clfny9ahr000intukhn0g1s4f"},{"post_id":"clfnuwm5l0000cguk8xnd3bnt","tag_id":"clfny922s000fntuk9mq7a8f9","_id":"clfny9ahr000jntuke1ph0468"}],"Tag":[{"name":"golang,后端","_id":"clfny222b0001ntuk8b9j4a1x"},{"name":"golang 后端","_id":"clfny2iqk0008ntuk0f86gl44"},{"name":"go","_id":"clfny8mbz000antukdm605wew"},{"name":"goxxx","_id":"clfny8mc0000bntukghfq1tal"},{"name":"golang","_id":"clfny922s000entukgiayfq07"},{"name":"后端","_id":"clfny922s000fntuk9mq7a8f9"}]}}